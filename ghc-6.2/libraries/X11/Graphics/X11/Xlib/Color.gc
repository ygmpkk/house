-----------------------------------------------------------------------------
-- |
-- Module      :  Graphics.X11.Xlib.Color
-- Copyright   :  (c) Alastair Reid, 1999-2003
-- License     :  BSD-style (see the file libraries/base/LICENSE)
-- 
-- Maintainer  :  libraries@haskell.org
-- Stability   :  provisional
-- Portability :  portable
--
-- A collection of GreenCard declarations for interfacing with Xlib Colors.
--
-----------------------------------------------------------------------------

module Graphics.X11.Xlib.Color(

        lookupColor,
        allocNamedColor,
        allocColor,
        parseColor,
        freeColors,
        storeColor,
        queryColor,
        queryColors,
        installColormap,
        uninstallColormap,
        copyColormapAndFree,
        createColormap,
        freeColormap,

        ) where
 
import Foreign.GreenCard
import Graphics.X11.Types
import Graphics.X11.Xlib.Types

%#include "HsXlib.h"

%prefix X

----------------------------------------------------------------
-- Color and Colormaps
----------------------------------------------------------------

%fun XLookupColor :: Display -> Colormap -> String -> IO (Color, Color)
%code Status err = XLookupColor(arg1,arg2,arg3,&res1,&res2)
%fail { 0 == err }{ Zero(err,XLookupColor) }
%end  free(arg3)

%fun XAllocNamedColor :: Display -> Colormap -> String -> IO (Color, Color)
%code Status err = XAllocNamedColor(arg1,arg2,arg3,&res1,&res2)
%fail { 0 == err }{ Zero(err,XLookupColor) }
%end  free(arg3)

%fun XAllocColor :: Display -> Colormap -> Color -> IO Color               
%code Status err = XAllocColor(arg1,arg2,&arg3)
%fail { 0 == err }{ Zero(err,XLookupColor) }
%result (color {arg3})

%fun XParseColor :: Display -> Colormap -> String -> IO Color              
%code Status err = XParseColor(arg1,arg2,arg3,&res1)
%fail { 0 == err }{ Zero(err,XLookupColor) }
%end  free(arg3)

-- ToDo: Can't express relationship between arg4 and res1 properly (or arg5, res2)
-- %errfun Zero XAllocColorCells :: Display -> Colormap -> Bool -> Int -> Int -> IO (ListPixel, ListPixel) using err = XAllocColorCells(arg1,arg2,arg3,arg4_size,res1,arg5_size,res2) 

-- ToDo: Can't express relationship between arg4 and res1 properly
-- %errfun Zero XAllocColorPlanes :: Display -> Colormap -> Bool -> Int -> Int -> Int -> Int IO (ListPixel, Pixel, Pixel, Pixel) using err = XAllocColorPlanes(...)

%fun XFreeColors :: Display -> Colormap -> ListPixel -> Pixel -> IO () 
%call (display arg1) (colormap arg2) (listPixel arg3 arg3_size) (pixel arg4)
%code XFreeColors(arg1,arg2,arg3,arg3_size,arg4)
%end free(arg3)

%fun XStoreColor  :: Display -> Colormap -> Color -> IO ()             
%code XStoreColor(arg1,arg2,&arg3) 

-- %fun XStoreColors :: Display -> Colormap -> ListColor -> IO ()         
-- %code XStoreColors(arg1,arg2,arg3,arg3_size) 
-- %fun XStoreNamedColor :: Display -> Colormap -> String -> Pixel -> PrimaryMask -> IO ()

%fun XQueryColor  :: Display -> Colormap -> Color -> IO Color         
%code XQueryColor(arg1,arg2,&arg3)
%result (color {arg3})

%fun XQueryColors :: Display -> Colormap -> ListColor -> IO ListColor 
%call (display arg1) (colormap arg2) (listColor arg3 arg3_size)
%code XQueryColors(arg1,arg2,arg3,arg3_size)
%result (listColor {arg3} {arg3_size})

%fun XInstallColormap     :: Display -> Colormap -> IO ()
%fun XUninstallColormap   :: Display -> Colormap -> IO ()
%fun XCopyColormapAndFree :: Display -> Colormap -> IO Colormap
%fun XCreateColormap      :: Display -> Window   -> Visual -> ColormapAlloc -> IO Colormap
%fun XFreeColormap        :: Display -> Colormap -> IO ()

----------------------------------------------------------------
-- End
----------------------------------------------------------------
