-----------------------------------------------------------------------------
-- |
-- Module      :  System.Win32.NLS
-- Copyright   :  (c) Alastair Reid, 1997-2003
-- License     :  BSD-style (see the file libraries/base/LICENSE)
-- 
-- Maintainer  :  libraries@haskell.org
-- Stability   :  provisional
-- Portability :  portable
--
-- A collection of GreenCard declarations for interfacing with Win32.
--
-----------------------------------------------------------------------------

module System.Win32.NLS where

import Foreign.GreenCard
import System.Win32.Types

%#include <windows.h>
%#include "errors.h"
%#include "win32debug.h"

type LCID = DWORD
%dis lCID x = dWORD x

%const LCID 
% [ LOCALE_SYSTEM_DEFAULT
% , LOCALE_USER_DEFAULT
% , LOCALE_NEUTRAL
% ]

%fun ConvertDefaultLocale :: LCID -> IO LCID

-- ToDo: various enum functions.

type CodePage = UINT
%dis codePage x = uINT x

%const CodePage [ CP_ACP, CP_MACCP, CP_OEMCP ]

%fun GetACP :: IO CodePage

%fun SetThreadLocale :: LCID -> IO ()

type LCTYPE = UINT
%dis lCTYPE x = uINT x

%const LCTYPE 
% [ LOCALE_ICALENDARTYPE
% , LOCALE_SDATE 
% , LOCALE_ICURRDIGITS
% , LOCALE_SDECIMAL 
% , LOCALE_ICURRENCY
% , LOCALE_SGROUPING
% , LOCALE_IDIGITS
% , LOCALE_SLIST
% , LOCALE_IFIRSTDAYOFWEEK
% , LOCALE_SLONGDATE
% , LOCALE_IFIRSTWEEKOFYEAR
% , LOCALE_SMONDECIMALSEP
% , LOCALE_ILZERO
% , LOCALE_SMONGROUPING
% , LOCALE_IMEASURE
% , LOCALE_SMONTHOUSANDSEP
% , LOCALE_INEGCURR
% , LOCALE_SNEGATIVESIGN
% , LOCALE_INEGNUMBER
% , LOCALE_SPOSITIVESIGN
% , LOCALE_SSHORTDATE
% , LOCALE_ITIME
% , LOCALE_STHOUSAND
% , LOCALE_S1159
% , LOCALE_STIME
% , LOCALE_S2359
% , LOCALE_STIMEFORMAT
% , LOCALE_SCURRENCY
% ]

-- doesn't work too well with Unicode strings coming back. ToDo: fix.

%fun SetLocaleInfo :: LCID -> LCTYPE -> IO String
%code LPCSTR s;
%     BOOL b = SetLocaleInfo(arg1,arg2,s);
%fail { b == FALSE } {ErrorWin("SetLocaleInfo")}
%result (string {s})

type LCMapFlags = DWORD
%dis lCMapFlags x = dWORD x

%const LCMapFlags
% [ LCMAP_BYTEREV
% , LCMAP_FULLWIDTH
% , LCMAP_HALFWIDTH
% , LCMAP_HIRAGANA
% , LCMAP_KATAKANA
% , LCMAP_LOWERCASE
% , LCMAP_SORTKEY
% , LCMAP_UPPERCASE
% , NORM_IGNORECASE
% , NORM_IGNORENONSPACE
% , NORM_IGNOREKANATYPE
% , NORM_IGNORESYMBOLS
% , NORM_IGNOREWIDTH
% , SORT_STRINGSORT
% , LCMAP_LINGUISTIC_CASING
% , LCMAP_SIMPLIFIED_CHINESE
% , LCMAP_TRADITIONAL_CHINESE
% ]

%fun LCMapString :: LCID -> LCMapFlags -> String -> Int -> IO String
%call (lCID arg1) (lCMapFlags arg2) (stringLen arg3 arg3_len) (int arg4)
%code int i; char* str;
%     str = malloc(sizeof(char)*arg4);
%     i = LCMapString(arg1,arg2,arg3,arg3_len,str,arg4);
%fail { i == 0 } { ErrorWin("LCMapString")}
%result (string {str})

type LocaleTestFlags = DWORD
%dis localeTestFlags x = dWORD x

%const LocaleTestFlags [ LCID_INSTALLED, LCID_SUPPORTED ]

%fun IsValidLocale :: LCID -> LocaleTestFlags -> IO Bool

%fun IsValidCodePage :: CodePage -> IO Bool

%fun GetUserDefaultLCID :: LCID

%fun GetUserDefaultLangID :: LANGID

%fun GetThreadLocale :: IO LCID

%fun GetSystemDefaultLCID :: LCID

%fun GetSystemDefaultLangID :: LANGID

%fun GetOEMCP :: CodePage

type LANGID = WORD
%dis lANGID x = wORD x

%fun LANGIDFROMLCID :: LCID -> LANGID

type SubLANGID = WORD
%dis subLANGID x = wORD x

type PrimaryLANGID = WORD
%dis primaryLANGID x = wORD x

%const PrimaryLANGID
% [ LANG_NEUTRAL
% , LANG_BULGARIAN
% , LANG_CHINESE
% , LANG_CZECH
% , LANG_DANISH
% , LANG_GERMAN
% , LANG_GREEK
% , LANG_ENGLISH
% , LANG_SPANISH
% , LANG_FINNISH
% , LANG_FRENCH
% , LANG_HUNGARIAN
% , LANG_ICELANDIC
% , LANG_ITALIAN
% , LANG_JAPANESE
% , LANG_KOREAN
% , LANG_DUTCH
% , LANG_NORWEGIAN
% , LANG_POLISH
% , LANG_PORTUGUESE
% , LANG_ROMANIAN
% , LANG_RUSSIAN
% , LANG_CROATIAN
% , LANG_SLOVAK
% , LANG_SWEDISH
% , LANG_TURKISH
% , LANG_SLOVENIAN
% , LANG_ARABIC
% , LANG_CATALAN
% , LANG_HEBREW
% , LANG_SERBIAN
% , LANG_ALBANIAN
% , LANG_THAI
% , LANG_URDU
% , LANG_INDONESIAN
% , LANG_BELARUSIAN
% , LANG_ESTONIAN
% , LANG_LATVIAN
% , LANG_LITHUANIAN
% , LANG_FARSI
% , LANG_VIETNAMESE
% , LANG_ARMENIAN
% , LANG_AZERI
% , LANG_BASQUE
% , LANG_MACEDONIAN
% , LANG_AFRIKAANS
% , LANG_GEORGIAN
% , LANG_FAEROESE
% , LANG_HINDI
% , LANG_MALAY
% , LANG_KAZAK
% , LANG_SWAHILI
% , LANG_UZBEK
% , LANG_TATAR
% , LANG_BENGALI
% , LANG_PUNJABI
% , LANG_GUJARATI
% , LANG_ORIYA
% , LANG_TAMIL
% , LANG_TELUGU
% , LANG_KANNADA
% , LANG_MALAYALAM
% , LANG_ASSAMESE
% , LANG_MARATHI
% , LANG_SANSKRIT
% , LANG_KONKANI
% , LANG_MANIPURI
% , LANG_SINDHI
% , LANG_KASHMIRI
% , LANG_NEPALI
% ]

%fun MAKELANGID :: PrimaryLANGID -> SubLANGID -> LANGID

%fun MAKELCID :: LANGID -> SortID -> LCID

%fun PRIMARYLANGID :: LANGID -> PrimaryLANGID

%fun SUBLANGID :: LANGID -> SubLANGID

%fun SORTIDFROMLCID :: LCID -> SortID

type SortID = WORD
%dis sortID x = wORD x

%const SortID
% [ SORT_DEFAULT
% , SORT_JAPANESE_XJIS
% , SORT_JAPANESE_UNICODE
% , SORT_CHINESE_BIG5
% , SORT_CHINESE_UNICODE
% , SORT_KOREAN_KSC
% , SORT_KOREAN_UNICODE
% ]

%const SubLANGID 
% [ SUBLANG_NEUTRAL
% , SUBLANG_DEFAULT
% , SUBLANG_SYS_DEFAULT
% , SUBLANG_CHINESE_TRADITIONAL
% , SUBLANG_CHINESE_SIMPLIFIED
% , SUBLANG_CHINESE_HONGKONG
% , SUBLANG_CHINESE_SINGAPORE
% , SUBLANG_DUTCH
% , SUBLANG_DUTCH_BELGIAN
% , SUBLANG_ENGLISH_US
% , SUBLANG_ENGLISH_UK
% , SUBLANG_ENGLISH_AUS
% , SUBLANG_ENGLISH_CAN
% , SUBLANG_ENGLISH_NZ
% , SUBLANG_ENGLISH_EIRE
% , SUBLANG_FRENCH
% , SUBLANG_FRENCH_BELGIAN
% , SUBLANG_FRENCH_CANADIAN
% , SUBLANG_FRENCH_SWISS
% , SUBLANG_GERMAN
% , SUBLANG_GERMAN_SWISS
% , SUBLANG_GERMAN_AUSTRIAN
% , SUBLANG_ITALIAN
% , SUBLANG_ITALIAN_SWISS
% , SUBLANG_NORWEGIAN_BOKMAL
% , SUBLANG_NORWEGIAN_NYNORSK
% , SUBLANG_PORTUGUESE
% , SUBLANG_PORTUGUESE_BRAZILIAN
% , SUBLANG_SPANISH
% , SUBLANG_SPANISH_MEXICAN
% , SUBLANG_SPANISH_MODERN
% , SUBLANG_ARABIC_SAUDI_ARABIA
% , SUBLANG_ARABIC_IRAQ
% , SUBLANG_ARABIC_EGYPT
% , SUBLANG_ARABIC_LIBYA
% , SUBLANG_ARABIC_ALGERIA
% , SUBLANG_ARABIC_MOROCCO
% , SUBLANG_ARABIC_TUNISIA
% , SUBLANG_ARABIC_OMAN
% , SUBLANG_ARABIC_YEMEN
% , SUBLANG_ARABIC_SYRIA
% , SUBLANG_ARABIC_JORDAN
% , SUBLANG_ARABIC_LEBANON
% , SUBLANG_ARABIC_KUWAIT
% , SUBLANG_ARABIC_UAE
% , SUBLANG_ARABIC_BAHRAIN
% , SUBLANG_ARABIC_QATAR
% , SUBLANG_AZERI_CYRILLIC
% , SUBLANG_AZERI_LATIN
% , SUBLANG_CHINESE_MACAU
% , SUBLANG_ENGLISH_SOUTH_AFRICA
% , SUBLANG_ENGLISH_JAMAICA
% , SUBLANG_ENGLISH_CARIBBEAN
% , SUBLANG_ENGLISH_BELIZE
% , SUBLANG_ENGLISH_TRINIDAD
% , SUBLANG_ENGLISH_PHILIPPINES
% , SUBLANG_ENGLISH_ZIMBABWE
% , SUBLANG_FRENCH_LUXEMBOURG
% , SUBLANG_FRENCH_MONACO
% , SUBLANG_GERMAN_LUXEMBOURG
% , SUBLANG_GERMAN_LIECHTENSTEIN
% , SUBLANG_KASHMIRI_INDIA
% , SUBLANG_KOREAN
% , SUBLANG_LITHUANIAN
% , SUBLANG_MALAY_MALAYSIA
% , SUBLANG_MALAY_BRUNEI_DARUSSALAM
% , SUBLANG_NEPALI_INDIA
% , SUBLANG_SERBIAN_LATIN
% , SUBLANG_SERBIAN_CYRILLIC
% , SUBLANG_SPANISH_GUATEMALA
% , SUBLANG_SPANISH_COSTA_RICA
% , SUBLANG_SPANISH_PANAMA
% , SUBLANG_SPANISH_DOMINICAN_REPUBLIC
% , SUBLANG_SPANISH_VENEZUELA
% , SUBLANG_SPANISH_COLOMBIA
% , SUBLANG_SPANISH_PERU
% , SUBLANG_SPANISH_ARGENTINA
% , SUBLANG_SPANISH_ECUADOR
% , SUBLANG_SPANISH_CHILE
% , SUBLANG_SPANISH_URUGUAY
% , SUBLANG_SPANISH_PARAGUAY
% , SUBLANG_SPANISH_BOLIVIA
% , SUBLANG_SPANISH_EL_SALVADOR
% , SUBLANG_SPANISH_HONDURAS
% , SUBLANG_SPANISH_NICARAGUA
% , SUBLANG_SPANISH_PUERTO_RICO
% , SUBLANG_SWEDISH
% , SUBLANG_SWEDISH_FINLAND
% , SUBLANG_URDU_PAKISTAN
% , SUBLANG_URDU_INDIA
% , SUBLANG_UZBEK_LATIN
% , SUBLANG_UZBEK_CYRILLIC
% ]

-- % , SUBLANG_LITHUANIAN_CLASSIC (not in mingw-20001111)
