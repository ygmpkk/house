#
# Hugs GNUMakefile for GreenCard-based Win32 library
#

#== Start of user-serviceable parts

# Whether to assume GreenCard generated files are up to date
USE_GC=NO

# Toplevel directory of greencard distribution.
# If you're using an installed greencard, you'll
# need to set the GCLIBDIR and GC variables explicitly.
#
GCDIR		= ../../../greencard
GCDIR_DOS	= z:/fptools-new-rts/greencard
GCLIBDIR        = $(GCDIR)/lib/hugs:.
GC	    	= $(RUNHUGS) -h1m  $(GCDIR_DOS)/src/Main.lhs

HUGSDIR 	= /hugs98
RUNHUGS	        = $(HUGSDIR)/runhugs
FFIHUGS	        = $(HUGSDIR)/ffihugs

#== End of user serviceable parts
#   (you shouldn't have to edit any of what follows.)


# List this first to make it the default target
all::

# These specify the input files and some of the intermediate files

SRCS		= $(notdir $(wildcard gc-src/*.gc))

GEN_CFILES 	= $(addsuffix _stub_ffi.c,   $(basename $(SRCS)))
GEN_HFILES 	= $(addsuffix _stub_ffi.h,   $(basename $(SRCS)))
GEN_HS		= $(addsuffix .hs,           $(basename $(SRCS)))
GEN_FFI		= $(addsuffix .c,            $(basename $(SRCS)))
DLLS 		= $(addsuffix .dll,          $(basename $(SRCS)))

GUILIBS		= kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib comctl32.lib winmm.lib advapi32.lib


################################################################
# Programs
################################################################

RM     	= rm -f
CP	= cp
AR     	= ar
RANLIB 	= ranlib
ZIP     = zip
SED     = sed
MV      = mv

# Use GreenCard compiled with GHC or interpreted by Hugs

################################################################

GC_OPTS		= $(SRC_GC_OPTS) $(EXTRA_GC_OPTS) $($*_GC_OPTS)
CC_OPTS		= $(SRC_CC_OPTS) $(EXTRA_CC_OPTS) $($*_CC_OPTS)

SRC_GC_OPTS  	+= --target ffi 
# SRC_GC_OPTS     += --include-dir $(GCLIBDIR)
ifeq "$(DEBUG)" "YES"
SRC_GC_OPTS     += --stub-debug
SRC_CC_OPTS     += -DDEBUG -O
SRC_HC_OPTS     += -optc-DWIN32_LIB_DEBUG
endif


################################################################
# Suffix rules taken from the GHC users guide
################################################################

.SUFFIXES	:
.SUFFIXES	: .gc .hs .dll .c

ifeq "$(USE_GC)" "YES"
%_stub_ffi.c %_stub_ffi.h %.hs	: gc-src/%.gc
		$(GC) $(GC_OPTS) -i gc-src $< -p $*
endif

%.dll		: %.hs 
		$(FFIHUGS) +G $(EXTRA_$*) +L"\"$(INCLUDES) $(GUILIBS) -DSTRICT $*_stub_ffi.c\"" $<

# This goes first to make it the default
all ::		$(HS) $(DLLS) 

# Files generated by GreenCard
generated : $(GEN_CFILES) $(GEN_HFILES) $(GEN_HS)

#
# Dependency generation
#
depend ::
	perl mkGCDep $(addprefix gc-src/, $(SRCS)) > .depend

#
# Source distributions
#
SRC_DIST_DIR=win32
SRC_DIST_SNAP_NAME=win32-$(shell date +%d%m%y).zip
H_DIST_FILES=Win32Aux.h WndProc.h dumpBMP.h errors.h hugsQuit.h finalizers.h diatemp.h
C_DIST_FILES=WndProc.c dumpBMP.c errors.c finalizers.c diatemp.c
MK_DIST_FILES=Makefile mkGCDep .depend
GC_DIST_FILES=$(wildcard *.gc)
EXTRA_DIST_FILES=dist/README.ghc dist/README.hugs dist/ghc-win32.patch

dist ::
	mkdir $(SRC_DIST_DIR)
	$(CP) $(GC_DIST_FILES) $(H_DIST_FILES) $(C_DIST_FILES) $(MK_DIST_FILES) $(SRC_DIST_DIR)
	mkdir $(SRC_DIST_DIR)/dist
	$(CP) $(EXTRA_DIST_FILES) $(SRC_DIST_DIR)/dist
	$(ZIP) -r $(SRC_DIST_SNAP_NAME) $(SRC_DIST_DIR)
#	$(RM) -rf $(SRC_DIST_DIR)

publish ::
	scp1 -v $(SRC_DIST_SNAP_NAME) sof@bathurst.dcs.gla.ac.uk:/local/ftp/pub/haskell/glasgow/green-card/

#
# Binary Hugs distributions
#
BIN_DIST_DIR=win32
BIN_DIST_SNAP_NAME=win32-hugs-$(shell date +%d%m%y).zip
# Ship these too to make it self-contained.
STDDIS_FILES=c:/Hugs98/lib/win32/StdDIS.hs c:/Hugs98/lib/win32/StdDIS.dll
BIN_DIST_FILES=$(HS) $(DLLS) $(STDDIS_FILES)
BIN_DIST_EXTRAS=dist/README.hugs
binary-dist ::
	mkdir $(BIN_DIST_DIR)
	$(CP) $(BIN_DIST_FILES) $(BIN_DIST_EXTRAS) $(BIN_DIST_DIR)
	$(ZIP) -r $(BIN_DIST_SNAP_NAME) $(BIN_DIST_DIR)
	$(RM) -rf $(BIN_DIST_DIR)
	@echo Created binary dist: $(BIN_DIST_SNAP_NAME)

# Of limited use.
publish-binary-dist ::
	scp1 -v $(BIN_DIST_SNAP_NAME) sof@bathurst.dcs.gla.ac.uk:/local/ftp/pub/haskell/glasgow/green-card/


#
# Clean up
#
clean		::
		rm -f *.obj *.exp *.lib 
		rm -f $(GEN_CFILES) $(GEN_HFILES) $(GEN_HS) $(GEN_FFI) $(DLLS) 

# Hard-wired dependencies

EXTRA_Win32Bitmap   = +L'dumpBMP.c'
EXTRA_Win32Window   = +L'WndProc.c'
EXTRA_Win32Dialogue = +L'diatemp.c'
EXTRA_Win32Path     = +L'finalizers.c'
EXTRA_Win32Region   = +L'finalizers.c'
EXTRA_Win32Registry = +L'finalizers.c'

# All generated C files #include errors.h to get consistent error messages
$(DLLS)		: errors.h

-include .depend
